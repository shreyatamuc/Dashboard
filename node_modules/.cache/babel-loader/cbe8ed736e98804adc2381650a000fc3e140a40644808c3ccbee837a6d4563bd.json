{"ast":null,"code":"var _jsxFileName = \"/Users/shreyadhuri/Downloads/Dashboard/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport FilterBar from './components/FilterBar';\nimport CommitTable from './components/CommitTable';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  useEffect(() => {\n    fetch('commit_log.csv').then(res => res.text()).then(csv => {\n      Papa.parse(csv, {\n        header: true,\n        skipEmptyLines: true,\n        complete: result => {\n          const parsedData = result.data.map(row => ({\n            ...row,\n            Insertions: +row.Insertions,\n            Deletions: +row.Deletions,\n            'Files Changed': +row['Files Changed']\n          }));\n          setData(parsedData);\n          setFilteredData(parsedData);\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-blue-800 mb-4\",\n      children: \"GitHub Commit Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FilterBar, {\n        data: data,\n        setFilteredData: setFilteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommitTable, {\n        data: filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qVEhtocWIY/7ThNKEvUCk7dwcrg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","FilterBar","CommitTable","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","filteredData","setFilteredData","fetch","then","res","text","csv","parse","header","skipEmptyLines","complete","result","parsedData","map","row","Insertions","Deletions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/shreyadhuri/Downloads/Dashboard/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport FilterBar from './components/FilterBar';\nimport CommitTable from './components/CommitTable';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n\n  useEffect(() => {\n    fetch('commit_log.csv')\n      .then(res => res.text())\n      .then(csv => {\n        Papa.parse(csv, {\n          header: true,\n          skipEmptyLines: true,\n          complete: (result) => {\n            const parsedData = result.data.map(row => ({\n              ...row,\n              Insertions: +row.Insertions,\n              Deletions: +row.Deletions,\n              'Files Changed': +row['Files Changed'],\n            }));\n            setData(parsedData);\n            setFilteredData(parsedData);\n          }\n        });\n      });\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-6\">\n      <h1 className=\"text-3xl font-bold text-blue-800 mb-4\">GitHub Commit Dashboard</h1>\n      {data.length > 0 && (\n        <>\n          <FilterBar data={data} setFilteredData={setFilteredData} />\n          <CommitTable data={filteredData} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,gBAAgB,CAAC,CACpBC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,GAAG,IAAI;MACXjB,IAAI,CAACkB,KAAK,CAACD,GAAG,EAAE;QACdE,MAAM,EAAE,IAAI;QACZC,cAAc,EAAE,IAAI;QACpBC,QAAQ,EAAGC,MAAM,IAAK;UACpB,MAAMC,UAAU,GAAGD,MAAM,CAACb,IAAI,CAACe,GAAG,CAACC,GAAG,KAAK;YACzC,GAAGA,GAAG;YACNC,UAAU,EAAE,CAACD,GAAG,CAACC,UAAU;YAC3BC,SAAS,EAAE,CAACF,GAAG,CAACE,SAAS;YACzB,eAAe,EAAE,CAACF,GAAG,CAAC,eAAe;UACvC,CAAC,CAAC,CAAC;UACHf,OAAO,CAACa,UAAU,CAAC;UACnBX,eAAe,CAACW,UAAU,CAAC;QAC7B;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA;IAAKwB,SAAS,EAAC,8BAA8B;IAAAC,QAAA,gBAC3CzB,OAAA;MAAIwB,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjFxB,IAAI,CAACyB,MAAM,GAAG,CAAC,iBACd9B,OAAA,CAAAE,SAAA;MAAAuB,QAAA,gBACEzB,OAAA,CAACH,SAAS;QAACQ,IAAI,EAAEA,IAAK;QAACG,eAAe,EAAEA;MAAgB;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3D7B,OAAA,CAACF,WAAW;QAACO,IAAI,EAAEE;MAAa;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACnC,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzB,EAAA,CApCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}